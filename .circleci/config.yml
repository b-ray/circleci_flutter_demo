version: 2.1

orbs:
  android: circleci/android@1.0.3

executors:
  mac:
    macos:
      xcode: 12.5.0
  flutter:
    docker:
      - image: cirrusci/flutter:2.2.2
    resource_class: xlarge

jobs:
  unit_test:
    executor: flutter
    steps:
      - checkout
      - run:
          name: Run tests
          command: flutter test

  setup_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - checkout
      - run:
          name: Install flutter
          command: |
            sudo snap install flutter --classic
      - restore_cache:
          key: bundle-v1-{{ checksum "android/Gemfile.lock" }}-{{ arch }}
      - run: 
          command: bundle install
          working_directory: android
      - save_cache:
          key: bundle-v1-{{ checksum "android/Gemfile.lock" }}-{{ arch }}
          paths:
            - android/vendor/bundle
      - persist_to_workspace:
          root: .
          paths:
            - .

  integration_test_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Create AVD
          command: |
            SYSTEM_IMAGES="system-images;android-29;default;x86"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES"
      - run:
          name: Boot emulator
          command: |
            emulator -avd test -delay-adb -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          background: true
      - run:
          name: Wait for emulator
          command: |
            circle-android wait-for-boot
      - run:
          name: Disable emulator animation
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
      - run:
          name: Integration Test
          command: flutter drive --driver=test_driver/integration_test_driver.dart --target=integrarion_test/counter_test.dart

  distribute_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - attach_workspace:
          at: .
      - run:
          command: bundle exec fastlane beta
          working_directory: android

  setup_ios:
    executor: mac
    steps:
      - checkout
      - run:
          name: Install flutter
          command: |
            if ! test -f "flutter_sdk.zip"; then curl -o flutter_sdk.zip https://storage.googleapis.com/flutter_infra/releases/stable/macos/flutter_macos_1.22.5-stable.zip; fi
            unzip flutter_sdk.zip
            pwd
            echo 'export PATH="$PATH:`pwd`/flutter/bin"'  >> $BASH_ENV
            flutter doctor
      - restore_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
      - run: 
          command: bundle install
          working_directory: ios
      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - ios/vendor/bundle
      - persist_to_workspace:
          root: .
          paths:
            - .

  distribute_ios:
    executor: mac
    steps:
      - attach_workspace:
          at: .
      - run:
          command: bundle exec fastlane beta
          working_directory: ios

  integration_test_ios:
    executor: mac
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - attach_workspace:
          at: .
      - run:
          name: pre-start simulator
          command: xcrun instruments -w "iPhone 12 (14.5) [" || true
      - run:
          name: Integration Test
          command: flutter drive --driver=test_driver/integration_test_driver.dart --target=integrarion_test/counter_test.dart

workflows:
  test_and_distribute:
    jobs:
      - unit_test
      - setup_ios
      - integration_test_ios:
          requires:
            - setup_ios
      - distribute_ios:
          requires:
            - setup_ios
      - setup_android
      - integration_test_android:
          requires:
            - setup_android
      - distribute_android:
          requires:
            - setup_android
