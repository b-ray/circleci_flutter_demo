version: 2.1

orbs:
  android: circleci/android@1.0.3
  flutter-orb: tadashi0713/flutter-orb@0.0.1

executors:
  mac:
    macos:
      xcode: 12.5.1
  flutter:
    docker:
      - image: cirrusci/flutter:2.2.2
    resource_class: xlarge

commands:
  install_android_gems:
    steps:
      - restore_cache:
          key: bundle-v1-{{ checksum "android/Gemfile.lock" }}-{{ arch }}
      - run: 
          command: bundle install
          working_directory: android
      - save_cache:
          key: bundle-v1-{{ checksum "android/Gemfile.lock" }}-{{ arch }}
          paths:
            - android/vendor/bundle
  install_ios_gems:
    steps:
      - restore_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
      - run: 
          command: bundle install
          working_directory: ios
      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - ios/vendor/bundle
  install_android_gradle:
    steps:
      - restore_cache:
          key: jars-{{ checksum  "android/app/build.gradle" }}-{{ arch }}
      - run:
          command: gradle androidDependencies
          working_directory: android
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum  "android/app/build.gradle" }}-{{ arch }}
  install_ios_pod:
    steps:
      - restore_cache:
          key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}
      - run: 
          command: pod install
          working_directory: ios
      - save_cache:
          key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}
          paths:
            - ios/Pods

jobs:
  unit_test:
    executor: flutter
    steps:
      - checkout
      - run:
          name: Run tests
          command: |
            flutter pub global activate junitreport
            export PATH="$PATH":"$HOME/.pub-cache/bin"
            mkdir -p test-results/junit/
            flutter test --machine | tojunit > test-results/junit/result.xml
      - store_test_results:
          path: test-results

  integration_test_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - checkout
      - run:
          name: Create AVD
          command: |
            SYSTEM_IMAGES="system-images;android-29;default;x86"
            DEVICE="pixel_4"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES" -d "$DEVICE"
      - run:
          name: Boot emulator
          command: |
            emulator -avd test -delay-adb -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          background: true
      - flutter-orb/install:
          os: linux
          version: 2.2.3
      - run: flutter pub get
      - install_android_gradle
      - run:
          name: Wait for emulator
          command: |
            circle-android wait-for-boot
      - run:
          name: Disable emulator animation
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
      - run:
          name: Integration Test
          command: flutter drive --target=test_driver/app.dart
      - store_artifacts:
          path: ozzie

  distribute_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - checkout
      - flutter-orb/install:
          os: linux
          version: 2.2.3
      - run: flutter pub get
      - install_android_gradle
      - install_android_gems
      - run:
          command: bundle exec fastlane distribute_debug
          working_directory: android

  integration_test_ios:
    executor: mac
    steps:
      - checkout
      - flutter-orb/install:
          os: macos
          version: 2.2.3
      - run: flutter pub get
      - install_ios_pod
      - run:
          name: pre-start simulator
          command: xcrun instruments -w "iPhone 12 (14.5) [" || true
      - run:
          name: Integration Test
          command: flutter drive --target=test_driver/app.dart
      - store_artifacts:
          path: ozzie

  distribute_ios:
    executor: mac
    steps:
      - checkout
      - flutter-orb/install:
          os: macos
          version: 2.2.3
      - run: flutter pub get
      - install_ios_pod
      - install_ios_gems
      - run:
          command: bundle exec fastlane distribute_debug
          working_directory: ios

workflows:
  test_and_distribute:
    jobs:
      - unit_test
      - integration_test_ios
      - distribute_ios
      - integration_test_android
      - distribute_android
